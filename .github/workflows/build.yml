name: Linux

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  workflow_dispatch:

jobs:
  compress-lib:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Download CPython
        run: |
          chmod +x download_cpython.sh
          ./download_cpython.sh cpython
      - name: Install zip
        run: sudo apt-get install zip
      - name: Compress
        working-directory: cpython/Lib
        # cannot be compressed - python doesn't have zlib
        run: zip -0 -r ../../python312.zip *
      - uses: actions/upload-artifact@v4
        with:
          name: python312.zip
          path: python312.zip
      

  build-linux-x64:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Download CPython
        run: |
          chmod +x download_cpython.sh
          ./download_cpython.sh cpython
      - name: Install dependencies
        working-directory: cpython
        run: sudo ./.github/workflows/posix-deps-apt.sh
      - name: Prepare Setup.local
        working-directory: cpython
        run: echo "*static*" >> Modules/Setup.local
      - name: Configure CPython
        working-directory: cpython
        run: ./configure LDFLAGS="-static" --disable-shared
      - name: Build CPython
        working-directory: cpython
        run: make LDFLAGS="-static" LINKFORSHARED=" " -j4 libpython3.12.a
      - name: Compile API
        run: |
          chmod +x compile_api.sh
          ./compile_api.sh cpython
      - uses: actions/upload-artifact@v4
        with:
          name: python3.12-linux-x64
          path: |
            libpython3api.a
            python3api

  build-linux-arm64:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: apt-get update
        run: sudo apt-get update
      - name: Download qemu-user-static and debootstrap
        run: sudo apt-get install qemu-user-static debootstrap
      - name: Download arm64
        run: sudo debootstrap --components=main,universe --arch arm64 focal rootfs
      - name: Download CPython
        # debootstrap is runned as root
        run: |
          chmod +x download_cpython.sh
          sudo bash ./download_cpython.sh rootfs/root/cpython
      - name: Install dependencies
        run: sudo chroot rootfs sh -c 'cd ~/cpython && .github/workflows/posix-deps-apt.sh'
      - name: Prepare Setup.local
        run: sudo chroot rootfs sh -c 'cd ~/cpython && echo "*static*" >> Modules/Setup.local'
      - name: Configure CPython
        run: sudo chroot rootfs sh -c 'cd ~/cpython && ac_cv_lib_util_openpty=no ./configure LDFLAGS="-static" --disable-shared'
      - name: Build CPython
        run: sudo chroot rootfs sh -c 'cd ~/cpython && make LDFLAGS="-static" LINKFORSHARED=" " -j4 libpython3.12.a'
      - name: Compile API
        run: |
          sudo cp python3api.c python3api.h compile_api.sh rootfs/root/
          sudo chmod +x rootfs/root/compile_api.sh
          sudo chroot rootfs sh -c 'cd ~/ && ./compile_api.sh cpython'
          sudo cp rootfs/root/cpython/{libpython3api.a,python3api} .
      - uses: actions/upload-artifact@v4
        with:
          name: python3.12-linux-arm64
          path: |
            libpython3api.a
            python3api

  build-macos:
    env:
      HOMEBREW_NO_ANALYTICS: 1
      HOMEBREW_NO_AUTO_UPDATE: 1
      HOMEBREW_NO_INSTALL_CLEANUP: 1
      PYTHONSTRICTEXTENSIONBUILD: 1
    strategy:
      fail-fast: false
      max-parallel: 2
      matrix:
        os: [
          "macos-14",  # M1
          "macos-13",  # Intel
        ]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - name: Download CPython
      run: |
        chmod +x download_cpython.sh
        ./download_cpython.sh cpython
    - name: Configure CPython
      working-directory: cpython
      run: ac_cv_header_libintl_h=no ac_cv_lib_intl_textdomain=no ./configure --disable-shared
    - name: Build CPython
      working-directory: cpython
      run: make CFLAGS="-mmacosx-version-min=12.0" LINKFORSHARED=" " -j4 libpython3.12.a
    - name: Compile API
      run: |
        chmod +x compile_api.sh
        ./compile_api.sh cpython
    - uses: actions/upload-artifact@v4
      if: matrix.os == 'macos-14'
      with:
        name: python3.12-macos-arm64
        path: |
          libpython3api.a
          python3api
    - uses: actions/upload-artifact@v4
      if: matrix.os == 'macos-13'
      with:
        name: python3.12-macos-x64
        path: |
          libpython3api.a
          python3api
  
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Download CPython
        shell: bash
        run: |
          chmod +x download_cpython.sh
          ./download_cpython.sh cpython
      - name: Apply patch
        shell: bash
        working-directory: cpython
        run: patch -p1 < ../cpython_windows.patch
      - name: Install dependencies
        working-directory: cpython
        run: PCbuild\get_externals.bat
      - name: Build _freeze_module
        working-directory: cpython
        shell: cmd
        run: |
          call PCbuild\find_msbuild.bat %MSBUILD%
          %MSBUILD% PCbuild\_freeze_module.vcxproj /p:Configuration=Release
      - name: Build CPython (x64)
        working-directory: cpython
        shell: cmd
        run: |
          call PCbuild\find_msbuild.bat %MSBUILD%
          %MSBUILD% PCbuild\pythoncore.vcxproj /p:Configuration=Release /p:Platform=x64
      - name: Build CPython (ARM64)
        working-directory: cpython
        shell: cmd
        run: |
          call PCbuild\find_msbuild.bat %MSBUILD%
          %MSBUILD% PCbuild\pythoncore.vcxproj /p:Configuration=Release /p:Platform=ARM64
      - name: Configure build for x64
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64
      - name: Build API (x64)
        run: .\win_compile.bat amd64
      - uses: actions/upload-artifact@v4
        with:
          name: python3.12-windows-x64
          path: |
            python3api.lib
            python3api.exe
      - name: Configure build for ARM64
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: amd64_arm64
      - name: Build API (ARM64)
        run: .\win_compile.bat arm64
      - uses: actions/upload-artifact@v4
        with:
          name: python3.12-windows-arm64
          path: |
            python3api.lib
            python3api.exe
        